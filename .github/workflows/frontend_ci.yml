name: Frontend CI - Build & Push Image

on:
  workflow_call:
    inputs:
      acr_login_server:
        required: true
        type: string
  pull_request:
    branches: [ main, dev, develop ]

jobs:
  build_and_push_frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Patch frontend Dockerfile to avoid Docker Hub rate limits
      # - nginx -> public.ecr.aws/docker/library/nginx
      # - node  -> public.ecr.aws/docker/library/node  (in case you use multi-stage builds)
      - name: Patch Dockerfile base images to ECR Public mirrors
        shell: bash
        run: |
          set -Eeuo pipefail
          DF="frontend/Dockerfile"
          if [ -f "$DF" ]; then
            # nginx
            sed -i -E 's|^FROM[[:space:]]+nginx:([[:alnum:]._-]+)|FROM public.ecr.aws/docker/library/nginx:\1|' "$DF" || true
            # node (optional if present)
            sed -i -E 's|^FROM[[:space:]]+node:([[:alnum:]._-]+)|FROM public.ecr.aws/docker/library/node:\1|' "$DF" || true
            echo "Dockerfile FROM lines after patch:"
            grep -n '^FROM ' "$DF" || true
          else
            echo "No frontend/Dockerfile found"; exit 1
          fi

      # PRs: build only
      - name: Build Frontend (PR check only)
        if: ${{ github.event_name == 'pull_request' }}
        run: docker build -t frontend-ci-check ./frontend/

      # Non-PRs: login and push to ACR
      - name: Azure Login
        if: ${{ github.event_name != 'pull_request' }}
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Resolve ACR and SHORT_SHA
        if: ${{ github.event_name != 'pull_request' }}
        shell: bash
        run: |
          set -Eeuo pipefail
          ACR_LOGIN_SERVER="${{ inputs.acr_login_server }}"
          [ -n "$ACR_LOGIN_SERVER" ] || { echo "Missing input: acr_login_server"; exit 1; }
          echo "ACR_LOGIN_SERVER=$ACR_LOGIN_SERVER" >> $GITHUB_ENV
          ACR_NAME="${ACR_LOGIN_SERVER%%.*}"
          echo "ACR_NAME=$ACR_NAME" >> $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Login to Azure Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        shell: bash
        run: az acr login --name "$ACR_NAME"

      - name: Build & Push frontend (:latest and :SHORT_SHA)
        if: ${{ github.event_name != 'pull_request' }}
        shell: bash
        run: |
          docker build \
            -t "$ACR_LOGIN_SERVER/frontend:latest" \
            -t "$ACR_LOGIN_SERVER/frontend:$SHORT_SHA" \
            ./frontend/
          docker push "$ACR_LOGIN_SERVER/frontend:latest"
          docker push "$ACR_LOGIN_SERVER/frontend:$SHORT_SHA"

      - name: Logout Azure
        if: ${{ always() && github.event_name != 'pull_request' }}
        run: az logout
